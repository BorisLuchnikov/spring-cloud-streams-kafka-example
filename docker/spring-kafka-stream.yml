version: '3'

services:

  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
    - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
    - ./spring-kafka-stream/zoo1/data:/data
    - ./spring-kafka-stream/zoo1/datalog:/datalog
    networks:
    - backend

  kafka1:
    image: confluentinc/cp-kafka:4.1.0
    hostname: kafka1
    ports:
    - "9092:9092"
    environment:
      # add the entry "127.0.0.1    kafka1" to your /etc/hosts file
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
    - ./spring-kafka-stream/kafka1/data:/var/lib/kafka/data
    networks:
    - backend
    depends_on:
    - zoo1

  output:
    image: input:0.0.0.0
    build:
      context: ./
      dockerfile: output_df
    ports:
    - "8081:8080"
    environment:
    - JAVA_OPTS=-Xmx256m -Dspring.cloud.stream.bindings.message-out.producer.partitionCount=6
    networks:
    - backend
    links:
    - kafka1
    - zoo1
    depends_on:
    - kafka1
    - zoo1

  input:
    image: input:0.0.0.0
    build:
      context: ./
      dockerfile: input_df
    ports:
    - "8090-8091:8080"
    environment:
    - JAVA_OPTS=-Xmx128m -Dspring.cloud.stream.instanceCount=2 -Dspring.cloud.stream.kafka.binder.minPartitionCount=3
    networks:
    - backend
    links:
    - kafka1
    - zoo1
    depends_on:
    - kafka1
    - zoo1

networks:
  backend:
    driver: "bridge"
    ipam:
      driver: default
